

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
-- | S(1) | S(0) | Q_(t+1) |
Q_t
|
DOHH
0
0
0
1
| Q_t+1|
1
0
1
1
| Qt - 11 Load
-
3
ENTITY jk_countern_sync IS
generic (bit_size: integer := 8);
port
Preset_not: IN std_logic;
S: IN std_logic_vector(1 DOWNTO 0);
Clk, Clear_not: IN std_logic;
Q, Q_not: OUT std_logic_vector (bit_size-1 DOWNTO 0);
V OUT std_logic);
END jk_countern_sync;
ARCHITECTURE struct OF jk_countern_sync IS
SIGNAL int_and, int_not_and, int_Q, int_JK: std_logic_vector (bit_size-1 DOWNTO 0); BEGIN
int_and (0) <= '1';
int_not_and (0) <= '1';
mo ENTITY work.mux_2to4 (struct)
port map (S(0), 5(1), '0', int and (0), int_JK (0));
ffo : ENTITY work.jk_flipflop (struct)
port map ('1', int_JK (0), int_JK (0), Clk, Clear_not, int_Q(0), Q_not (0));
Q(0) <= int_Q(0);
c: FOR i IN 1 TO bit_size-1 GENERATE
int_and (i) <= int_and (i-1) and int_Q(i-1);
ãƒ¨
mi: ENTITY work.mux_lto2 (struct)
3
port map (En, gnd, int and (i), int_JK (i));
ci: ENTITY work.jk_flipflop (struct)
port map (vcc, int_JK(i), int_JK(i), Clk, Clear_not, int_Q(i), Q_not(i)); Q(i)<= int_Q(i);
END GENERATE c;
V <= int_Q(bit_size-1) and int_and (bit_size-1);
END struct;